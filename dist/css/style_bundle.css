.avatar {
  position: relative;
  display: inline-block;
  width: 4rem;
  height: 4rem;
  overflow: hidden;
  font-size: 2.4rem;
  color: white;
  text-align: center;
  vertical-align: middle;
  background-color: #9e9e9e;
  border-radius: 50%;
}

.avatar > svg {
  width: 1em;
  height: 4rem;
  fill: currentColor;
}

.avatar > img {
  max-width: 100%;
  height: auto;
}

.image {
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  background-color: transparent;
  background-position: center;
  background-size: cover;
  border-radius: 50%;
}

.letter {
  display: block;
  width: 100%;
  line-height: 4rem;
}

.chip {
  position: relative;
  display: inline-block;
  max-width: 100%;
  padding: 0 1.2rem;
  margin-right: 0.25rem;
  overflow: hidden;
  font-size: 1.4rem;
  line-height: 3.2rem;
  color: #757575;
  text-overflow: ellipsis;
  white-space: nowrap;
  background-color: #eeeeee;
  border-radius: 3.2rem;
}

.avatar {
  padding-left: 0;
}

.avatar > [data-react-toolbox="avatar"] {
  width: 3.2rem;
  height: 3.2rem;
  margin-right: 0.8rem;
  vertical-align: middle;
}

.avatar > [data-react-toolbox="avatar"] > span {
  font-size: 2rem;
  line-height: 3.2rem;
}

.deletable {
  padding-right: 3.2rem;
}

.delete {
  position: absolute;
  right: 0;
  display: inline-block;
  width: 2.4rem;
  height: 2.4rem;
  padding: 0.4rem;
  margin: 0.4rem;
  vertical-align: middle;
  cursor: pointer;
}

.delete:hover .deleteIcon {
  background: #9e9e9e;
}

.deleteIcon {
  vertical-align: top;
  background: #bdbdbd;
  border-radius: 2.4rem;
}

.deleteIcon .deleteX {
  fill: transparent;
  stroke-width: 0.4rem;
  stroke: white;
}

.input {
  position: relative;
  padding: 2rem 0;
}

.input.withIcon {
  margin-left: 4.8rem;
}

.icon {
  position: absolute;
  top: 1.6rem;
  left: -4.8rem;
  display: block;
  width: 4.8rem;
  height: 4.8rem;
  font-size: 2.4rem !important;
  line-height: 4.8rem !important;
  color: rgba(0, 0, 0, 0.26);
  text-align: center;
  transition: color 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}

.inputElement {
  display: block;
  width: 100%;
  padding: 0.8rem 0;
  font-size: 1.6rem;
  color: #212121;
  background-color: transparent;
  border: 0;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
  outline: none;
}

.inputElement:focus:not([disabled]):not([readonly]) ~ .bar:before,
.inputElement:focus:not([disabled]):not([readonly]) ~ .bar:after {
  width: 50%;
}

.inputElement:focus:not([disabled]):not([readonly]) ~ .label:not(.fixed) {
  color: #3f51b5;
}

.inputElement:focus:not([disabled]):not([readonly]) ~ .label > .required {
  color: #de3226;
}

.inputElement:focus:not([disabled]):not([readonly]) ~ .hint {
  display: block;
  opacity: 1;
}

.inputElement:focus:not([disabled]):not([readonly]) ~ .icon {
  color: #3f51b5;
}

.inputElement:focus:not([disabled]):not([readonly]) ~ .label:not(.fixed),
.inputElement.filled ~ .label:not(.fixed),
.inputElement[type="date"] ~ .label:not(.fixed),
.inputElement[type="time"] ~ .label:not(.fixed) {
  top: 0.6rem;
  font-size: 1.2rem;
}

.inputElement:focus:not([disabled]):not([readonly]).filled ~ .hint,
.inputElement.filled.filled ~ .hint,
.inputElement[type="date"].filled ~ .hint,
.inputElement[type="time"].filled ~ .hint {
  opacity: 0;
}

.inputElement.filled ~ .label.fixed,
.inputElement.filled ~ .hint {
  display: none;
}

.label {
  position: absolute;
  top: 3.2rem;
  left: 0;
  font-size: 1.6rem;
  line-height: 1.6rem;
  color: rgba(0, 0, 0, 0.26);
  pointer-events: none;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.35s;
  transition-property: top, font-size, color;
}

.label.fixed ~ .hint {
  display: none;
}

.hint {
  position: absolute;
  top: 3.2rem;
  left: 0;
  font-size: 1.6rem;
  line-height: 1.6rem;
  color: rgba(0, 0, 0, 0.26);
  pointer-events: none;
  opacity: 1;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.35s;
  transition-property: opacity;
}

.bar {
  position: relative;
  display: block;
  width: 100%;
}

.bar:before,
.bar:after {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.2s;
  position: absolute;
  bottom: 0;
  width: 0;
  height: 2px;
  content: "";
  background-color: #3f51b5;
  transition-property: width, background-color;
}

.bar:before {
  left: 50%;
}

.bar:after {
  right: 50%;
}

.error,
.counter {
  margin-bottom: -2rem;
  font-size: 1.2rem;
  line-height: 2rem;
  color: #de3226;
}

.counter {
  position: absolute;
  right: 0;
  color: rgba(0, 0, 0, 0.26);
}

.disabled > .inputElement {
  color: rgba(0, 0, 0, 0.26);
  border-bottom-style: dotted;
}

.errored {
  padding-bottom: 0;
}

.errored > .inputElement {
  margin-top: 1px;
  border-bottom-color: #de3226;
}

.errored > .counter,
.errored > .label {
  color: #de3226;
}

.errored > .label > .required {
  color: #de3226;
}

.hidden {
  display: none;
}

.autocomplete {
  position: relative;
  padding: 1rem 0;
}

.autocomplete.focus .suggestions {
  max-height: 45vh;
  visibility: visible;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.12), 0 1px 4px rgba(0, 0, 0, 0.24);
}

.values {
  flex-direction: row;
  flex-wrap: wrap;
  padding-bottom: 0.5rem;
}

.value {
  margin: 0.25rem 0.5rem 0.25rem 0;
}

.suggestions {
  position: absolute;
  z-index: 100;
  width: 100%;
  max-height: 0;
  overflow-x: hidden;
  overflow-y: auto;
  visibility: hidden;
  background-color: white;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.35s;
  transition-property: max-height, box-shadow;
}

.suggestions::-webkit-scrollbar {
  width: 0;
  height: 0;
}

.suggestions:not(.up) {
  margin-top: -2rem;
}

.suggestions.up {
  bottom: 0;
}

.suggestion {
  padding: 1rem;
  font-size: 1.6rem;
  cursor: pointer;
}

.suggestion.active {
  background-color: #eeeeee;
}

.input {
  position: relative;
}

.input:after {
  position: absolute;
  top: 50%;
  right: 0.8rem;
  width: 0;
  height: 0;
  pointer-events: none;
  content: "";
  border-top: 0.54857rem solid rgba(0, 0, 0, 0.12);
  border-right: 0.54857rem solid transparent;
  border-left: 0.54857rem solid transparent;
  transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}


/*# sourceMappingURL=style_bundle.css.map*/